# 基于 openjdk:23 镜像
FROM eclipse-temurin:8-jdk

USER root

# 设置环境变量，避免交互提示
ENV DEBIAN_FRONTEND=noninteractive

RUN echo "当前基础镜像的操作系统信息：" && cat /etc/os-release

# 更新包列表并安装必要的依赖
RUN apt-get update && \
    apt-get install -y \
        git \
        jq \
        ca-certificates \
        curl \
        wget \
        unzip \
        tar \
        sudo \
        gnupg \
        lsb-release

# 添加 Docker 的官方 GPG 密钥
# 添加 Docker APT 源
RUN mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
# 更新 APT 包索引并安装 Docker 社区版
RUN apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin
RUN docker --version

# 安装 scout-cli
RUN curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh \
    && sh install-scout.sh

# 下载并解压 Maven
ENV MAVEN_VERSION 3.6.3
ENV MAVEN_HOME /usr/local/maven
RUN curl -fsSL https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/${MAVEN_VERSION}/apache-maven-${MAVEN_VERSION}-bin.tar.gz | tar xzf - -C /usr/local \
    && mv /usr/local/apache-maven-${MAVEN_VERSION} $MAVEN_HOME \
    && ln -s $MAVEN_HOME/bin/mvn /usr/bin/mvn
RUN mvn -v

# 下载并解压 Gradle
ENV GRADLE_VERSION 8.5
ENV GRADLE_HOME /usr/local/gradle
RUN curl -fsSL https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o gradle-bin.zip \
    && unzip gradle-bin.zip -d /usr/local \
    && mv /usr/local/gradle-${GRADLE_VERSION} $GRADLE_HOME \
    && ln -s $GRADLE_HOME/bin/gradle /usr/bin/gradle \
    && rm gradle-bin.zip
RUN gradle --version

# 下载并解压 Ant 1.10.13
ENV ANT_VERSION 1.10.13
ENV ANT_HOME /usr/local/ant
RUN curl -fsSL https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz | tar xzf - -C /usr/local \
    && mv /usr/local/apache-ant-${ANT_VERSION} $ANT_HOME \
    && ln -s $ANT_HOME/bin/ant /usr/bin/ant
RUN ant -version

# 下载并解压 Ant 1.8.2
ENV ANT_VERSION 1.8.2
ENV ANT_HOME /usr/local/ant-${ANT_VERSION}
RUN curl -fsSL https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz | tar xzf - -C /usr/local \
    && mv /usr/local/apache-ant-${ANT_VERSION} $ANT_HOME \
    && ln -s $ANT_HOME/bin/ant /usr/bin/ant182
RUN ant182 -version

# 下载并解压 Ant 1.9.6
ENV ANT_VERSION 1.9.6
ENV ANT_HOME /usr/local/ant-${ANT_VERSION}
RUN curl -fsSL https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz | tar xzf - -C /usr/local \
    && mv /usr/local/apache-ant-${ANT_VERSION} $ANT_HOME \
    && ln -s $ANT_HOME/bin/ant /usr/bin/ant196
RUN ant196 -version

# 安装 kubectl
RUN mkdir -p -m 755 /etc/apt/keyrings \
    && curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
    && chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
    && echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list \
    && chmod 644 /etc/apt/sources.list.d/kubernetes.list \
    && apt-get install -y apt-transport-https ca-certificates curl gnupg \
    && apt-get update \
    && apt-get install -y kubectl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 安装 Helm
RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 \
    && chmod 700 get_helm.sh \
    && ./get_helm.sh \
    && rm get_helm.sh

# 查看 kubectl 和 Helm 版本
RUN kubectl version --client
RUN helm version

# 恢复默认环境变量
ENV DEBIAN_FRONTEND=dialog
    