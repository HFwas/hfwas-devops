# 基于 openjdk:23 镜像
FROM openjdk:24-ea-23-slim-bullseye

# 设置环境变量，避免交互提示
ENV DEBIAN_FRONTEND=noninteractive

RUN echo "当前基础镜像的操作系统信息：" && cat /etc/os-release

# 更新包列表并安装必要的依赖
RUN apt-get update && \
    apt-get install -y \
        git \
        jq \
        ca-certificates \
        curl \
        wget \
        unzip \
        tar \
        gnupg \
        lsb-release && \
    # 添加 Docker 的官方 GPG 密钥
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    # 设置 Docker 仓库
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    # 更新包列表
    apt-get update && \
    # 安装 Docker 相关包
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin && \
    # 清理 apt 缓存
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 下载并解压 Maven
ENV MAVEN_VERSION 3.6.3
ENV MAVEN_HOME /usr/local/maven
RUN curl -fsSL https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/${MAVEN_VERSION}/apache-maven-${MAVEN_VERSION}-bin.tar.gz | tar xzf - -C /usr/local \
    && mv /usr/local/apache-maven-${MAVEN_VERSION} $MAVEN_HOME \
    && ln -s $MAVEN_HOME/bin/mvn /usr/bin/mvn
RUN mvn -v

# 下载并解压 Gradle
ENV GRADLE_VERSION 8.5
ENV GRADLE_HOME /usr/local/gradle
RUN curl -fsSL https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o gradle-bin.zip \
    && unzip gradle-bin.zip -d /usr/local \
    && mv /usr/local/gradle-${GRADLE_VERSION} $GRADLE_HOME \
    && ln -s $GRADLE_HOME/bin/gradle /usr/bin/gradle \
    && rm gradle-bin.zip
RUN gradle --version


# 恢复默认环境变量
ENV DEBIAN_FRONTEND=dialog
    